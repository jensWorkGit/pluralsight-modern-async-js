{"version":3,"sources":["mocha.examples.js"],"names":[],"mappings":"AAAA,MAAM,IAAN,CAAW,gFAAX;;AAEA,KAAK,cAAL,EAAqB,YAAY;AAC7B,WAAO,IAAP,EAAa,IAAb,CAAkB,IAAlB;;AAEA,SAAK,iBAAL,EAAwB,YAAY;;AAEhC,eAAO,YAAY;;AAEf,kBAAM,IAAI,KAAJ,CAAU,SAAV,CAAN;AAEH,SAJD,EAIG,OAJH,CAIW,SAJX;AAMH,KARD;;AAUA,SAAK,6BAAL,EAAoC,YAAY;;AAE5C,cAAM,IAAI,KAAJ,CAAU,SAAV,CAAN;AAEH,KAJD;;AAMA,SAAK,uBAAL,EAA8B,UAAU,IAAV,EAAgB;;AAE1C,mBAAW,YAAY;;AAEnB,kBAAM,IAAI,KAAJ,CAAU,SAAV,CAAN;AAEH,SAJD,EAIG,CAJH;AAMH,KARD;;AAWA,SAAK,0CAAL,EAAiD,YAAY;;AAEzD,eAAO,IAAP,EAAa,IAAb,CAAkB,KAAlB;AAEH,KAJD;;AAMA,SAAK,yCAAL,EAAgD,UAAU,IAAV,EAAgB;;AAE5D,mBAAW,YAAY;;AAEnB,mBAAO,IAAP,EAAa,IAAb,CAAkB,KAAlB;AAEH,SAJD,EAIG,CAJH;AAMH,KARD;AASH,CA7CD","file":"mocha.examples.js","sourcesContent":["suite.skip(\"Mocha with QUnit interface and expect (separate library) assertions - examples\");\r\n\r\ntest(\"Passing test\", function () {\r\n    expect(true).toBe(true);\r\n\r\n    test(\"Throw, expected\", function () {\r\n\r\n        expect(function () {\r\n\r\n            throw new Error(\"oh noes\")\r\n\r\n        }).toThrow(\"oh noes\")\r\n\r\n    });\r\n\r\n    test(\"Synchronous throw, uncaught\", function () {\r\n\r\n        throw new Error(\"oh noes\")\r\n\r\n    });\r\n\r\n    test(\"Async throw, uncaught\", function (done) {\r\n\r\n        setTimeout(function () {\r\n\r\n            throw new Error(\"oh noes\")\r\n\r\n        }, 1)\r\n\r\n    });\r\n\r\n\r\n    test(\"Synchronous assert, is an uncaught error\", function () {\r\n\r\n        expect(true).toBe(false);\r\n\r\n    });\r\n\r\n    test(\"Async assert, is an uncaught error too!\", function (done) {\r\n\r\n        setTimeout(function () {\r\n\r\n            expect(true).toBe(false);\r\n\r\n        }, 1)\r\n\r\n    });\r\n});\r\n\r\n\r\n"],"sourceRoot":"C:\\Programmierung\\Pluralsight\\pluralsight-modern-async-js\\es6"}